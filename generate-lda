#!/usr/bin/env python

import argparse
import re
import os
import text
import sys

parser = argparse.ArgumentParser(description='Generate LDA data for use with Mallet for some or all of given spans')
parser.add_argument('--filter-regex',
    help="Regex to filter spans.")
parser.add_argument('--input',
    help="Directory containing input files.")
parser.add_argument('--output',
    help="File to output LDA data to.")
parser.add_argument('--output-suffix',
    default='.txt',
    help="Output suffix to add to input files to form output file names.")

args = parser.parse_args()

if not os.path.exists(args.output):
  os.makedirs(args.output)
with open(args.output, "w") as of:
  for fn in os.listdir(args.input):
    print fn
    text = open(os.path.join(args.input, fn)).read()
    spanno = 1
    for span in re.finditer(r'^-----+ BEGIN SPAN -----+$(.*?)^-----+ END SPAN -----+$', text, re.M | re.S):
      spantext = span.group(1)
      if not args.filter_regex or re.search(args.filter_regex, spantext):
        of.write("%s.%s span %s\n" % (fn, spanno, spantext.strip().replace("\n", " ")))
      spanno += 1
